<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.8.3">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2018-07-12T11:35:46+07:00</updated><id>http://localhost:4000/</id><title type="html">Kane’s Blog</title><subtitle>Hi I am Kane </subtitle><entry><title type="html">Điểm qua những tính năng hấp dẫn trong ES6 - Phần 3</title><link href="http://localhost:4000/coding/2018/07/06/diem-qua-nhung-tinh-nang-hap-dan-trong-es6-phan-3.html" rel="alternate" type="text/html" title="Điểm qua những tính năng hấp dẫn trong ES6 - Phần 3" /><published>2018-07-06T14:18:40+07:00</published><updated>2018-07-06T14:18:40+07:00</updated><id>http://localhost:4000/coding/2018/07/06/diem-qua-nhung-tinh-nang-hap-dan-trong-es6-phan-3</id><content type="html" xml:base="http://localhost:4000/coding/2018/07/06/diem-qua-nhung-tinh-nang-hap-dan-trong-es6-phan-3.html">&lt;h2 id=&quot;6arrow-function-in-es6&quot;&gt;6.Arrow Function in ES6&lt;/h2&gt;

&lt;p&gt;Hmm..Tính năng này rất thường xuất hiện trong ReactJS. &lt;code class=&quot;highlighter-rouge&quot;&gt;arrow&lt;/code&gt; dịch ra là mũi tên, vâng chúng ta sẽ làm việc với mũi tên :).&lt;/p&gt;

&lt;p&gt;Thông thường khi tạo một &lt;code class=&quot;highlighter-rouge&quot;&gt;function&lt;/code&gt; trong Javascript thì ta sử dụng những cách sau:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;c1&quot;&gt;//cách 1
&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;nameFunction&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;var1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;var2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;...&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// cách 2
&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;nameFunction&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;var1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;var2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;....&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Trong ES6 ta tạo đơn giản hơn bằng cách sử dụng mũi tên như sau:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;nameFunction&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;var1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;var2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;//dosomething...};
&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;echoName&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; 
  &lt;span class=&quot;nx&quot;&gt;alert&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;echoName&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;kane&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// nó sẽ alert ra kane&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;ul&gt;
  &lt;li&gt;Khi &lt;code class=&quot;highlighter-rouge&quot;&gt;funciton&lt;/code&gt; chỉ có &lt;code class=&quot;highlighter-rouge&quot;&gt;một dòng lệnh&lt;/code&gt;, ta có thể viết như thế này cho gọn hơn.&lt;/li&gt;
&lt;/ul&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;echoName&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;alert&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;echoName&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;kane&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// alert ra kane&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Nghĩa là bạn có thể bỏ đi cặp dấu {}, điều này tuân thủ theo nguyên tắc “nếu bên thân cặp {} chỉ là một câu lệnh thì bạn có thể bỏ cặp {}”.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Khi &lt;code class=&quot;highlighter-rouge&quot;&gt;function&lt;/code&gt; chỉ có &lt;code class=&quot;highlighter-rouge&quot;&gt;một tham tham số&lt;/code&gt;, ta có thể viết ngắn gọn lại là:&lt;/li&gt;
&lt;/ul&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;echoName&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;alert&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;echoName&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;kane&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// alert ra kane
&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;//Hoặc kết hợp cả tips ở trên thì ta có thể viết luôn như thế này
&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;echoName1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;alert&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;ul&gt;
  &lt;li&gt;Khi &lt;code class=&quot;highlighter-rouge&quot;&gt;function&lt;/code&gt; không có tham số:&lt;/li&gt;
&lt;/ul&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;sayHello&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;alert&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Hello....!&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;sayHello&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// alert ra câu Hello....!&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;ul&gt;
  &lt;li&gt;Ta Phải chú ý đến ràng buộc mũi tên &lt;code class=&quot;highlighter-rouge&quot;&gt;=&amp;gt;&lt;/code&gt; nữa nhá:&lt;/li&gt;
&lt;/ul&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;func1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// sai
&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;func2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// đúng
&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;func3&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;// đúng
&lt;/span&gt;

  &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;func4&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// đúng
&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;y&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;/&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h2 id=&quot;7-destructuring-assignment-in-es6&quot;&gt;7. Destructuring Assignment in ES6&lt;/h2&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Cú pháp Destructuring Assignment là một biểu thức Javascript mà nó có thể giải nén các giá trị từ `array` hoặc thuộc tính từ một `object` vào những biến riêng biệt.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;rest&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;20&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// expected output: 10
&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// expected output: 20
&lt;/span&gt;

&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;...&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;rest&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;20&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;30&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;40&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;50&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;rest&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// expected output: [30,40,50]&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Nếu để &lt;code class=&quot;highlighter-rouge&quot;&gt;...&lt;/code&gt; trước một biến thì khi bị tràn giá trị như ví dụ cuối thì biến &lt;code class=&quot;highlighter-rouge&quot;&gt;rest&lt;/code&gt; nó sẽ lấy hết phần giá trị bị tràn.&lt;/p&gt;

&lt;p&gt;Còn nhiều tips nữa như có thể: swap variable, ignoring some returned values bạn nào muốn tìm hiểu thêm thì vào &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Destructuring_assignment&quot;&gt;đây&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;8-modules-in-es6&quot;&gt;8. Modules in ES6&lt;/h2&gt;

&lt;p&gt;Nếu bạn nào đang học ReactJS thì sẽ thường sử dụng tính năng này này, lúc ta ta quản lý từng module như một component, mình cũng mới học thôi nên hiểu sao nói vậy.&lt;/p&gt;

&lt;p&gt;Trước ES6 JavaScript không hỗ trợ module. Mọi người thường sử dụng AMD, RequireJS, CommonJS và nhiều cái khác. Bây giờ trong ES6 bạn có thể sử dụng các import và export.&lt;/p&gt;

&lt;p&gt;Hãy xem ví dụ chúng ta có một biến &lt;code class=&quot;highlighter-rouge&quot;&gt;port&lt;/code&gt; và phương thức &lt;code class=&quot;highlighter-rouge&quot;&gt;getAccounts&lt;/code&gt; trong file&lt;code class=&quot;highlighter-rouge&quot;&gt;module.js&lt;/code&gt; ES5:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;nx&quot;&gt;module&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;exports&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;port&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;getAccounts&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;...&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Trong file main.js ES5 chúng ta require(‘module.js) là dependency:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;service&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'module.js'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;service&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;port&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 3000&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Với ES6 chúng ta import và export như sau, ở file &lt;code class=&quot;highlighter-rouge&quot;&gt;module.js&lt;/code&gt;:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;k&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;port&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3000&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;getAccounts&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;...&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Trong file &lt;code class=&quot;highlighter-rouge&quot;&gt;main.js&lt;/code&gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;port&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;getAccounts&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'module'&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;port&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 3000&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Hoặc ta muốn import hết những gì đã export trong file &lt;code class=&quot;highlighter-rouge&quot;&gt;module.js&lt;/code&gt; thì:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;service&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'module'&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;service&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;port&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 3000&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;</content><author><name></name></author><category term="Coding" /><summary type="html">6.Arrow Function in ES6 Hmm..Tính năng này rất thường xuất hiện trong ReactJS. arrow dịch ra là mũi tên, vâng chúng ta sẽ làm việc với mũi tên :). Thông thường khi tạo một function trong Javascript thì ta sử dụng những cách sau: //cách 1 function nameFunction(var1,var2){ ... } // cách 2 var nameFunction = function(var1, var2){ .... } Trong ES6 ta tạo đơn giản hơn bằng cách sử dụng mũi tên như sau: var nameFunction = (var1,var2) =&amp;gt; { //dosomething...}; var echoName = (name) =&amp;gt; { alert(name) }; echoName(&quot;kane&quot;); // nó sẽ alert ra kane Khi funciton chỉ có một dòng lệnh, ta có thể viết như thế này cho gọn hơn. var echoName = (name) =&amp;gt; alert(name); echoName(&quot;kane&quot;) // alert ra kane Nghĩa là bạn có thể bỏ đi cặp dấu {}, điều này tuân thủ theo nguyên tắc “nếu bên thân cặp {} chỉ là một câu lệnh thì bạn có thể bỏ cặp {}”. Khi function chỉ có một tham tham số, ta có thể viết ngắn gọn lại là: var echoName = name =&amp;gt; { alert(name); } echoName(&quot;kane&quot;) // alert ra kane //Hoặc kết hợp cả tips ở trên thì ta có thể viết luôn như thế này var echoName1 = name =&amp;gt; alert(name); Khi function không có tham số: var sayHello = () =&amp;gt; alert(&quot;Hello....!&quot;); sayHello(); // alert ra câu Hello....! Ta Phải chú ý đến ràng buộc mũi tên =&amp;gt; nữa nhá: const func1 = (x,y) // sai =&amp;gt; { return x + y; }; const func2 = (x,y) =&amp;gt; // đúng { return x - y; }; const func3 = (x,y) =&amp;gt; {// đúng return x * y; }; const func4 = ( // đúng x, y ) =&amp;gt; { return x / y; } 7. Destructuring Assignment in ES6 Cú pháp Destructuring Assignment là một biểu thức Javascript mà nó có thể giải nén các giá trị từ `array` hoặc thuộc tính từ một `object` vào những biến riêng biệt. var a, b, rest; [a, b] = [10, 20]; console.log(a); // expected output: 10 console.log(b); // expected output: 20 [a, b, ...rest] = [10, 20, 30, 40, 50]; console.log(rest); // expected output: [30,40,50] Nếu để ... trước một biến thì khi bị tràn giá trị như ví dụ cuối thì biến rest nó sẽ lấy hết phần giá trị bị tràn. Còn nhiều tips nữa như có thể: swap variable, ignoring some returned values bạn nào muốn tìm hiểu thêm thì vào đây 8. Modules in ES6 Nếu bạn nào đang học ReactJS thì sẽ thường sử dụng tính năng này này, lúc ta ta quản lý từng module như một component, mình cũng mới học thôi nên hiểu sao nói vậy. Trước ES6 JavaScript không hỗ trợ module. Mọi người thường sử dụng AMD, RequireJS, CommonJS và nhiều cái khác. Bây giờ trong ES6 bạn có thể sử dụng các import và export. Hãy xem ví dụ chúng ta có một biến port và phương thức getAccounts trong filemodule.js ES5: module.exports = { port: 3000, getAccounts: function() { ... } } Trong file main.js ES5 chúng ta require(‘module.js) là dependency: var service = require('module.js') console.log(service.port) // 3000 Với ES6 chúng ta import và export như sau, ở file module.js: export var port = 3000 export function getAccounts(url) { ... } Trong file main.js import {port, getAccounts} from 'module' console.log(port) // 3000 Hoặc ta muốn import hết những gì đã export trong file module.js thì: import * as service from 'module' console.log(service.port) // 3000</summary></entry><entry><title type="html">Điểm qua những tính năng hấp dẫn trong ES6 - Phần 2</title><link href="http://localhost:4000/coding/2018/07/05/diem-qua-nhung-tinh-nang-hap-dan-trong-es6-phan-2.html" rel="alternate" type="text/html" title="Điểm qua những tính năng hấp dẫn trong ES6 - Phần 2" /><published>2018-07-05T17:15:40+07:00</published><updated>2018-07-05T17:15:40+07:00</updated><id>http://localhost:4000/coding/2018/07/05/diem-qua-nhung-tinh-nang-hap-dan-trong-es6-phan-2</id><content type="html" xml:base="http://localhost:4000/coding/2018/07/05/diem-qua-nhung-tinh-nang-hap-dan-trong-es6-phan-2.html">&lt;h2 id=&quot;research-lại-object-trong-javacript&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;#&lt;/code&gt;Research lại Object trong Javacript&lt;/h2&gt;

&lt;p&gt;Trước tiên để hiểu gõ về tính năng tiếp theo ta cần hiểu gõ Object trong Javacript là gì, nếu ai đã hiểu rồi thì có thể scoll xuống mục 5.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Về mặt định nghĩa, một đối tượng (một object) là một danh sách các item, mỗi item là một cặp name-value, trong đó value có thể là: các kiểu dữ liệu cơ bản, function, hay cũng có thể là một object khác (kiểu dữ liệu phức hợp).&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Ta gọi mỗi item là một property(thuộc tính) của object nếu value của item đó có kiểu dữ liệu là kiểu phức hợp hoặc các kiểu dữ liệu cơ bản, ngược lại nếu value của item nó là một hàm (một function) thì ta gọi nó là method của object (phương thức của object).&lt;/p&gt;

&lt;p&gt;Ví dụ object:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;myFirstObject&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;firstName&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Richard&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;favoriteAuthor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Conrad&quot;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Có 2 cách để tạo ra Object là 
	1. Dùng Object literals.
	2. Dùng Object constructor.&lt;/p&gt;

&lt;p&gt;Mình sẽ nói ngắn gọn và cho ví dụ về 2 cách này để đi thẳng vào vấn đề.&lt;/p&gt;
&lt;h3 id=&quot;dùng-object-literals&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;#&lt;/code&gt;Dùng Object literals&lt;/h3&gt;

&lt;p&gt;Đại khái là sẽ dùng cặp ngoặc nhọn &lt;code class=&quot;highlighter-rouge&quot;&gt;{ }&lt;/code&gt; để tạo một object. &lt;code class=&quot;highlighter-rouge&quot;&gt;Literal&lt;/code&gt; có thể hiểu theo ngữ cảnh nào đó là việc “sử dụng chuỗi thuần tuý”.&lt;/p&gt;

&lt;p&gt;Ex:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;myBook&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'test1'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;  &lt;span class=&quot;c1&quot;&gt;//đối tượng có 1 thuộc tính
&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;//đối tượng có 1 thuộc tính và 1 phương thức (method)
&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;myCar&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
   &lt;span class=&quot;na&quot;&gt;brand&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'Toyota'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
   &lt;span class=&quot;na&quot;&gt;run&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(){&lt;/span&gt;
      &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'running'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
   &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h3 id=&quot;dùng-object-constructor&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;#&lt;/code&gt;Dùng Object constructor&lt;/h3&gt;

&lt;p&gt;Cách này sẽ sử dụng phương thức khởi tạo (constructor) của kiểu dữ liệu Object để tạo ra các object. Phương thức khởi tạo này là một hàm để tạo ra các object mới, ta dùng kèm từ khoá &lt;code class=&quot;highlighter-rouge&quot;&gt;new&lt;/code&gt;:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;c1&quot;&gt;//Tạo 1 đối tượng mới
&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;myApple&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Object&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;//Thêm các thuộc tính cho đối tượng
&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;myApple&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;color&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'red'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;myApple&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;shape&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'round'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;myApple&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;howSweet&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(){&lt;/span&gt;
   &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'I am sweet'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h3 id=&quot;tạo-nhiều-object-cùng-loại&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;#&lt;/code&gt;Tạo nhiều object cùng loại.&lt;/h3&gt;

&lt;p&gt;Ở mục 5.1 và 5.2 tôi đã giới thiệu cách tạo một &lt;code class=&quot;highlighter-rouge&quot;&gt;object&lt;/code&gt; trong javascript nhưng đó chỉ là tạo một object thôi vậy để làm tao ta tạo một loạt những object cùng loại.&lt;/p&gt;

&lt;h4 id=&quot;sử-dụng-mẫu-khởi-tạo&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;##&lt;/code&gt;Sử dụng mẫu khởi tạo&lt;/h4&gt;

&lt;p&gt;Cách này giống như ta tạo một class trong các ngôn ngữ lập trình khác, nhưng khác là Javascript sử dụng từ khoá &lt;code class=&quot;highlighter-rouge&quot;&gt;function&lt;/code&gt; để tạo ra một hàm khởi tạo đối tượng, dùng từ khoá &lt;code class=&quot;highlighter-rouge&quot;&gt;this&lt;/code&gt; để gán các thuộc tính cho đối tượng:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Fruit&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;_color&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;_name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
   &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;color&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;_color&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
   &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;_name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
   &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;showName&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(){&lt;/span&gt;
      &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
   &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Với hàm khởi tạo này, ta có thể tạo hàng loạt các đối tượng kiểu &lt;code class=&quot;highlighter-rouge&quot;&gt;Fruit&lt;/code&gt; như sau:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;mangoFruit&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Fruit&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'yellow'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'Mango'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;appleFruit&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Fruit&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'red'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'Apple'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h4 id=&quot;sử-dụng-prototype&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;##&lt;/code&gt;Sử dụng prototype&lt;/h4&gt;

&lt;p&gt;Ex:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Fruit&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;_color&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;_name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;Fruit&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;prototype&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;color&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'general_color'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;Fruit&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;prototype&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'general_name'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;Fruit&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;prototype&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;showName&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(){&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Với cách này thì ta cũng vẫn sẽ sử dụng hàm Fruit() để tạo ra các đối tượng object như cách ở trên:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;mangoFruit&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Fruit&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'yellow'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'Mango'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;appleFruit&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Fruit&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'red'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'Apple'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h3 id=&quot;5-enhanced-object-literals-in-es6&quot;&gt;5. Enhanced Object Literals in ES6&lt;/h3&gt;

&lt;p&gt;Như tôi đã nói ở trên ta có thể tạo một mẫu khởi tạo để tạo nhiều object cùng loại, nó tương tự class như trong các ngôn ngữ khác.&lt;/p&gt;

&lt;h4 id=&quot;51-thuộc-tính-khởi-tạo-ngắn-hơn&quot;&gt;5.1 Thuộc tính khởi tạo ngắn hơn&lt;/h4&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;c1&quot;&gt;//ES5
&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;getLaptop&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;make&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;model&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;year&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;na&quot;&gt;make&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;make&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
            &lt;span class=&quot;na&quot;&gt;model&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;model&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
            &lt;span class=&quot;na&quot;&gt;year&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;year&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;nx&quot;&gt;getLaptop&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Apple&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;MacBook&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;2015&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;// {make: &quot;Apple&quot;, model: &quot;MacBook&quot;, year: &quot;2015&quot;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Trong ES6 ta không cần lặp lại những parameter &lt;code class=&quot;highlighter-rouge&quot;&gt;trùng tên&lt;/code&gt; với thuộc tính.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;c1&quot;&gt;//ES6
&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;getLaptop&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;make&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;model&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;year&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;nx&quot;&gt;make&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
            &lt;span class=&quot;nx&quot;&gt;model&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
            &lt;span class=&quot;nx&quot;&gt;year&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;nx&quot;&gt;getLaptop&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Apple&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;MacBook&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;2015&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// {make: &quot;Apple&quot;, model: &quot;MacBook&quot;, year: &quot;2015&quot;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h4 id=&quot;52-viết-phương-thức-methods-ngắn-hơn&quot;&gt;5.2 Viết phương thức (methods) ngắn hơn&lt;/h4&gt;

&lt;p&gt;Ở phiên bản ES5 cú pháp để viết phương thức trong &lt;code class=&quot;highlighter-rouge&quot;&gt;object&lt;/code&gt; sẽ như thế này&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;c1&quot;&gt;//ES5
&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;getLaptop&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;make&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;model&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;year&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
           &lt;span class=&quot;na&quot;&gt;sayModel&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;model&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;nx&quot;&gt;getLaptop&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Apple&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;MacBook&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;2015&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;sayModel&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;//&quot;MacBook&quot;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Với ES6 ta không cần viết quá nhiều để phương thức đó hoạt động.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;c1&quot;&gt;//ES6
&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;getLaptop&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;make&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;model&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;year&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;nx&quot;&gt;sayModel&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;model&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;nx&quot;&gt;getLaptop&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Apple&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;MacBook&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;2015&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;sayModel&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;//&quot;MacBook&quot;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h4 id=&quot;53-có-thể-tính-toán-trong-property&quot;&gt;5.3 Có thể tính toán trong property&lt;/h4&gt;

&lt;p&gt;Như ta đã biết thì có 2 cách để chỉ định một khóa khi xử lý một thuộc tính của object là dấu chấm &lt;code class=&quot;highlighter-rouge&quot;&gt;.&lt;/code&gt; và dấu ngoặc vuông &lt;code class=&quot;highlighter-rouge&quot;&gt;[]&lt;/code&gt;, dấu ngoặc vuông cho phép chúng ta xử lý thuộc tính của object với các biểu thức&lt;/p&gt;

&lt;p&gt;Xem ví dụ này:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;make&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;laptop&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Apple&quot;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;laptop&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;make&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;//&quot;Apple&quot;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Chúng ta thấy rằng nó cho phép ta truyền biến &lt;code class=&quot;highlighter-rouge&quot;&gt;name&lt;/code&gt; vào dấu &lt;code class=&quot;highlighter-rouge&quot;&gt;[]&lt;/code&gt; từ đó ta có thể &lt;code class=&quot;highlighter-rouge&quot;&gt;console.log&lt;/code&gt; đối tượng &lt;code class=&quot;highlighter-rouge&quot;&gt;laptop&lt;/code&gt; với thuộc tính &lt;code class=&quot;highlighter-rouge&quot;&gt;make&lt;/code&gt; (là giá trị của biến &lt;code class=&quot;highlighter-rouge&quot;&gt;name&lt;/code&gt;).&lt;/p&gt;

&lt;p&gt;Bonus:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;make&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;laptop&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Apple&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Dell&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;HP&quot;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;laptop&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;make1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;//&quot;Apple&quot;
&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;laptop&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;make2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;//&quot;Dell&quot;
&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;laptop&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;make3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;//&quot;HP&quot;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;</content><author><name></name></author><category term="Coding" /><summary type="html">#Research lại Object trong Javacript Trước tiên để hiểu gõ về tính năng tiếp theo ta cần hiểu gõ Object trong Javacript là gì, nếu ai đã hiểu rồi thì có thể scoll xuống mục 5. Về mặt định nghĩa, một đối tượng (một object) là một danh sách các item, mỗi item là một cặp name-value, trong đó value có thể là: các kiểu dữ liệu cơ bản, function, hay cũng có thể là một object khác (kiểu dữ liệu phức hợp). Ta gọi mỗi item là một property(thuộc tính) của object nếu value của item đó có kiểu dữ liệu là kiểu phức hợp hoặc các kiểu dữ liệu cơ bản, ngược lại nếu value của item nó là một hàm (một function) thì ta gọi nó là method của object (phương thức của object). Ví dụ object: var myFirstObject = { firstName: &quot;Richard&quot;, favoriteAuthor: &quot;Conrad&quot; }; Có 2 cách để tạo ra Object là 1. Dùng Object literals. 2. Dùng Object constructor. Mình sẽ nói ngắn gọn và cho ví dụ về 2 cách này để đi thẳng vào vấn đề. #Dùng Object literals Đại khái là sẽ dùng cặp ngoặc nhọn { } để tạo một object. Literal có thể hiểu theo ngữ cảnh nào đó là việc “sử dụng chuỗi thuần tuý”. Ex: var myBook = {10: 'test1'}; //đối tượng có 1 thuộc tính //đối tượng có 1 thuộc tính và 1 phương thức (method) var myCar = { brand: 'Toyota', run: function(){ console.log('running'); } }; #Dùng Object constructor Cách này sẽ sử dụng phương thức khởi tạo (constructor) của kiểu dữ liệu Object để tạo ra các object. Phương thức khởi tạo này là một hàm để tạo ra các object mới, ta dùng kèm từ khoá new: //Tạo 1 đối tượng mới var myApple = new Object(); //Thêm các thuộc tính cho đối tượng myApple.color = 'red'; myApple.shape = 'round'; myApple.howSweet = function(){ console.log('I am sweet'); }; #Tạo nhiều object cùng loại. Ở mục 5.1 và 5.2 tôi đã giới thiệu cách tạo một object trong javascript nhưng đó chỉ là tạo một object thôi vậy để làm tao ta tạo một loạt những object cùng loại. ##Sử dụng mẫu khởi tạo Cách này giống như ta tạo một class trong các ngôn ngữ lập trình khác, nhưng khác là Javascript sử dụng từ khoá function để tạo ra một hàm khởi tạo đối tượng, dùng từ khoá this để gán các thuộc tính cho đối tượng: function Fruit (_color, _name){ this.color = _color; this.name = _name; this.showName = function(){ console.log(this.name); } }; Với hàm khởi tạo này, ta có thể tạo hàng loạt các đối tượng kiểu Fruit như sau: var mangoFruit = new Fruit('yellow', 'Mango'); var appleFruit = new Fruit('red', 'Apple'); ##Sử dụng prototype Ex: function Fruit (_color, _name){ }; Fruit.prototype.color = 'general_color'; Fruit.prototype.name = 'general_name'; Fruit.prototype.showName = function(){ console.log(this.name); }; Với cách này thì ta cũng vẫn sẽ sử dụng hàm Fruit() để tạo ra các đối tượng object như cách ở trên: var mangoFruit = new Fruit('yellow', 'Mango'); var appleFruit = new Fruit('red', 'Apple'); 5. Enhanced Object Literals in ES6 Như tôi đã nói ở trên ta có thể tạo một mẫu khởi tạo để tạo nhiều object cùng loại, nó tương tự class như trong các ngôn ngữ khác. 5.1 Thuộc tính khởi tạo ngắn hơn //ES5 function getLaptop(make, model, year) { return { make: make, model: model, year: year } } getLaptop(&quot;Apple&quot;, &quot;MacBook&quot;, &quot;2015&quot;);// {make: &quot;Apple&quot;, model: &quot;MacBook&quot;, year: &quot;2015&quot;} Trong ES6 ta không cần lặp lại những parameter trùng tên với thuộc tính. //ES6 function getLaptop(make, model, year) { return { make, model, year } } getLaptop(&quot;Apple&quot;, &quot;MacBook&quot;, &quot;2015&quot;); // {make: &quot;Apple&quot;, model: &quot;MacBook&quot;, year: &quot;2015&quot;} 5.2 Viết phương thức (methods) ngắn hơn Ở phiên bản ES5 cú pháp để viết phương thức trong object sẽ như thế này //ES5 function getLaptop(make, model, year) { return { sayModel : function() { return model; } } } getLaptop(&quot;Apple&quot;, &quot;MacBook&quot;, &quot;2015&quot;).sayModel(); //&quot;MacBook&quot; Với ES6 ta không cần viết quá nhiều để phương thức đó hoạt động. //ES6 function getLaptop(make, model, year) { return{ sayModel() { return model; } } } getLaptop(&quot;Apple&quot;, &quot;MacBook&quot;, &quot;2015&quot;).sayModel(); //&quot;MacBook&quot; 5.3 Có thể tính toán trong property Như ta đã biết thì có 2 cách để chỉ định một khóa khi xử lý một thuộc tính của object là dấu chấm . và dấu ngoặc vuông [], dấu ngoặc vuông cho phép chúng ta xử lý thuộc tính của object với các biểu thức Xem ví dụ này: var name = &quot;make&quot;; const laptop = { [name]: &quot;Apple&quot; } console.log(laptop.make);//&quot;Apple&quot; Chúng ta thấy rằng nó cho phép ta truyền biến name vào dấu [] từ đó ta có thể console.log đối tượng laptop với thuộc tính make (là giá trị của biến name). Bonus: var name = &quot;make&quot;; var i = 0; const laptop = { [name + ++i]: &quot;Apple&quot;, [name + ++i]: &quot;Dell&quot;, [name + ++i]: &quot;HP&quot; } console.log(laptop.make1);//&quot;Apple&quot; console.log(laptop.make2);//&quot;Dell&quot; console.log(laptop.make3);//&quot;HP&quot;</summary></entry><entry><title type="html">Điểm qua những tính năng hấp dẫn trong ES6 - Phần 1</title><link href="http://localhost:4000/coding/2018/07/04/diem-qua-nhung-tinh-nang-hap-dan-trong-es6-phan-1.html" rel="alternate" type="text/html" title="Điểm qua những tính năng hấp dẫn trong ES6 - Phần 1" /><published>2018-07-04T15:15:40+07:00</published><updated>2018-07-04T15:15:40+07:00</updated><id>http://localhost:4000/coding/2018/07/04/diem-qua-nhung-tinh-nang-hap-dan-trong-es6-phan-1</id><content type="html" xml:base="http://localhost:4000/coding/2018/07/04/diem-qua-nhung-tinh-nang-hap-dan-trong-es6-phan-1.html">&lt;p&gt;Sau một thời gian nghiên cứu về ReactJS tôi nhận ra mình còn chưa ổn về javascript và tham khảo trên mạng thì có một thành viên trong nhóm nói rằng: “Chưa nghiêm cứu về ES6 mà đã vội học ReactJS là một sai lầm”, ai cũng thế khi nghe nói như vậy thì chắc hẵn sẽ nghĩ là ES6 lợi hại vậy sao?, có lẻ mình đã cầm đèn chạy trước oto rồi.&lt;/p&gt;

&lt;p&gt;Học vững cái căn bản và tiếp thu công nghệ, bạn không thể sống mãi ở thế kỉ 20 được, vậy nên hôm nay tôi muốn note lại cho mình những tính năng tôi thích nhất trong ES6.&lt;/p&gt;

&lt;h2 id=&quot;1-default-parameters-in-es6&quot;&gt;1. Default Parameters in ES6&lt;/h2&gt;

&lt;p&gt;Tôi còn tưởng rằng nó đã có từ lâu vì đã quen đặt giá trị mặc định cho parameters từ PHP nên khi thấy ES6 có tính năng này tôi tưởng mình đã đi trước từ lâu :D&lt;/p&gt;

&lt;p&gt;Lúc trước thì để đặt một parameters mặc định ta làm như sau:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;link&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;height&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;color&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;height&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;height&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;50&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;color&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;color&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'red'&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;url&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;url&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'http://azat.co'&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;...&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;ES6 xuất hiện, chúng ta có thể đặt giá trị mặc định trong &lt;code class=&quot;highlighter-rouge&quot;&gt;()&lt;/code&gt; của &lt;code class=&quot;highlighter-rouge&quot;&gt;function&lt;/code&gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;link&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;height&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;50&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;color&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'red'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;url&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'http://azat.co'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;...&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Tất nhiên nó chỉ là mặc định, chúng ta có thể thay đổi nó trong thân function, ý nghĩa của việc để giá trị mặc định là giúp ta luôn đúng trong mọi trường hợp, thử nghĩ mà xem nếu ta không truyền vào màu của một đoạn text thì không lẻ nó trông suốt không màu :D, vậy nên color mặc định trong trường hợp này có thể là màu đen hoặc một màu nào đó bạn muốn default.&lt;/p&gt;

&lt;h2 id=&quot;2-template-literals-in-es6&quot;&gt;2. Template Literals in ES6&lt;/h2&gt;

&lt;p&gt;Template Literals hay &lt;code class=&quot;highlighter-rouge&quot;&gt;interpolation&lt;/code&gt; trong các ngôn ngữ khác là một cách hiển thị các biến trong chuỗi. Trong ES5 chúng ta làm như thế này:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'Your name is '&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;first&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;' '&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;last&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'.'&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;url&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'http://localhost:3000/api/messages/'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;id&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Khi học về tính năng của một ngôn ngữ nào đó các bạn nhớ phải để ý xem từ khóa tiếng anh của tính năng đó là như thế nào để thuận tiện cho việc ghi nhớ cũng như pro lên như ở đây là &lt;code class=&quot;highlighter-rouge&quot;&gt;interpolation&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Trở lại vấn đề trong ES6 chúng ta có thể sử dụng cú pháp mới ${name} bên trong chuỗi:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;`Your name is &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;first&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;last&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;.`&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;url&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;`http://localhost:3000/api/messages/&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;`&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Tính năng này cũng có trong PHP, tôi không nhớ là ở version bao nhiêu nhưng tôi sử dụng được ở PHP như:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-php&quot; data-lang=&quot;php&quot;&gt;	&lt;span class=&quot;nv&quot;&gt;$name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'Kane'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;' Hello $name!'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Ngoài lề tí thôi tiếp tục tính năng khác nào.&lt;/p&gt;

&lt;h2 id=&quot;3-multi-line-string-in-es6&quot;&gt;3. Multi-line String in ES6&lt;/h2&gt;

&lt;p&gt;Một syntactic sugar khác là chuỗi có nhiều dòng (multi-line string). Trong ES5, chúng ta làm như thế này:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;roadPoem&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'Then took the other, as just as fair,&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;t'&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'And having perhaps the better claim&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;t'&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'Because it was grassy and wanted wear,&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;t'&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'Though as for that the passing there&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;t'&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'Had worn them really about the same,&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;t'&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;fourAgreements&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'You have the right to be you.&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;
    You can only be you when you do your best.'&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Thật sự tôi rất ít khi viết nhiều như thế này trong 1 biến javascript nhưng có thì xem biết đâu chừng có ngày sử dụng.&lt;/p&gt;

&lt;p&gt;Trong ES6, chỉ cần sử dụng dấu backticks: ` `` `&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;roadPoem&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;`Then took the other, as just as fair,
    And having perhaps the better claim
    Because it was grassy and wanted wear,
    Though as for that the passing there
    Had worn them really about the same,`&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;fourAgreements&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;`You have the right to be you.
    You can only be you when you do your best.`&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h2 id=&quot;4-block-scoped-constructs-let-and-const&quot;&gt;4. Block-Scoped Constructs Let and Const&lt;/h2&gt;

&lt;p&gt;Tính năng này cho ta thêm một cách khai báo biến nhưng có trong phạm vi block, các bạn nào có học về OOP thì chắc chắn có hiểu biết về phạm vi biến như private, public, protected các kiểu nhưng là giữa các &lt;code class=&quot;highlighter-rouge&quot;&gt;class&lt;/code&gt; với nhau.&lt;/p&gt;

&lt;p&gt;Block-Scoped trong ES6 thì có từ khóa &lt;code class=&quot;highlighter-rouge&quot;&gt;let&lt;/code&gt; cho phép chúng ta khai báo biến trong phạm vi các khối lệnh. Các khối lệnh được định nghĩa bởi cặp ngoặc nhọn {}. Trong ES5, các khối không giới hạn phạm vi của các biến:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;example&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
		&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;temp&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
		&lt;span class=&quot;nx&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
		&lt;span class=&quot;nx&quot;&gt;b&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;temp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;temp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// example(10,5)
&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// console: a = 5
&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// console: b = 10
&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// console: temp = 10;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Và hãy so sánh với hàm này khi sử dụng &lt;code class=&quot;highlighter-rouge&quot;&gt;let&lt;/code&gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;example&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
		&lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;temp&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
		&lt;span class=&quot;nx&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
		&lt;span class=&quot;nx&quot;&gt;b&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;temp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;temp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// example(10,5)
&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// console: a = 5
&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// console: b = 10
&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// console: temp = undefine;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Đấy có nghĩa là biến &lt;code class=&quot;highlighter-rouge&quot;&gt;temp&lt;/code&gt; chỉ có thể sử dụng trong &lt;code class=&quot;highlighter-rouge&quot;&gt;{}&lt;/code&gt; mà nó bị bao phủ thôi còn khi ra ngoài nó sẽ tự động giải phóng giúp tiết kiệm tài nguyên.&lt;/p&gt;

&lt;p&gt;Còn &lt;code class=&quot;highlighter-rouge&quot;&gt;const&lt;/code&gt; thì sao? đơn giản nó là hằng, mà hằng thì không bao giờ thay đổi&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;kaneFunction&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;oke&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;  
  &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;oke&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;100&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; 
  
  &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// kaneFunction(true)
&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// console: a = 0&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;</content><author><name></name></author><category term="Coding" /><summary type="html">Sau một thời gian nghiên cứu về ReactJS tôi nhận ra mình còn chưa ổn về javascript và tham khảo trên mạng thì có một thành viên trong nhóm nói rằng: “Chưa nghiêm cứu về ES6 mà đã vội học ReactJS là một sai lầm”, ai cũng thế khi nghe nói như vậy thì chắc hẵn sẽ nghĩ là ES6 lợi hại vậy sao?, có lẻ mình đã cầm đèn chạy trước oto rồi. Học vững cái căn bản và tiếp thu công nghệ, bạn không thể sống mãi ở thế kỉ 20 được, vậy nên hôm nay tôi muốn note lại cho mình những tính năng tôi thích nhất trong ES6. 1. Default Parameters in ES6 Tôi còn tưởng rằng nó đã có từ lâu vì đã quen đặt giá trị mặc định cho parameters từ PHP nên khi thấy ES6 có tính năng này tôi tưởng mình đã đi trước từ lâu :D Lúc trước thì để đặt một parameters mặc định ta làm như sau: var link = function (height, color, url) { var height = height || 50 var color = color || 'red' var url = url || 'http://azat.co' ... } ES6 xuất hiện, chúng ta có thể đặt giá trị mặc định trong () của function var link = function(height = 50, color = 'red', url = 'http://azat.co') { ... } Tất nhiên nó chỉ là mặc định, chúng ta có thể thay đổi nó trong thân function, ý nghĩa của việc để giá trị mặc định là giúp ta luôn đúng trong mọi trường hợp, thử nghĩ mà xem nếu ta không truyền vào màu của một đoạn text thì không lẻ nó trông suốt không màu :D, vậy nên color mặc định trong trường hợp này có thể là màu đen hoặc một màu nào đó bạn muốn default. 2. Template Literals in ES6 Template Literals hay interpolation trong các ngôn ngữ khác là một cách hiển thị các biến trong chuỗi. Trong ES5 chúng ta làm như thế này: var name = 'Your name is ' + first + ' ' + last + '.' var url = 'http://localhost:3000/api/messages/' + id Khi học về tính năng của một ngôn ngữ nào đó các bạn nhớ phải để ý xem từ khóa tiếng anh của tính năng đó là như thế nào để thuận tiện cho việc ghi nhớ cũng như pro lên như ở đây là interpolation. Trở lại vấn đề trong ES6 chúng ta có thể sử dụng cú pháp mới ${name} bên trong chuỗi: var name = `Your name is ${first} ${last}.` var url = `http://localhost:3000/api/messages/${id}` Tính năng này cũng có trong PHP, tôi không nhớ là ở version bao nhiêu nhưng tôi sử dụng được ở PHP như: $name = 'Kane'; echo ' Hello $name!'; Ngoài lề tí thôi tiếp tục tính năng khác nào. 3. Multi-line String in ES6 Một syntactic sugar khác là chuỗi có nhiều dòng (multi-line string). Trong ES5, chúng ta làm như thế này: var roadPoem = 'Then took the other, as just as fair,\n\t' + 'And having perhaps the better claim\n\t' + 'Because it was grassy and wanted wear,\n\t' + 'Though as for that the passing there\n\t' + 'Had worn them really about the same,\n\t' var fourAgreements = 'You have the right to be you.\n\ You can only be you when you do your best.' Thật sự tôi rất ít khi viết nhiều như thế này trong 1 biến javascript nhưng có thì xem biết đâu chừng có ngày sử dụng. Trong ES6, chỉ cần sử dụng dấu backticks: ` `` ` var roadPoem = `Then took the other, as just as fair, And having perhaps the better claim Because it was grassy and wanted wear, Though as for that the passing there Had worn them really about the same,` var fourAgreements = `You have the right to be you. You can only be you when you do your best.` 4. Block-Scoped Constructs Let and Const Tính năng này cho ta thêm một cách khai báo biến nhưng có trong phạm vi block, các bạn nào có học về OOP thì chắc chắn có hiểu biết về phạm vi biến như private, public, protected các kiểu nhưng là giữa các class với nhau. Block-Scoped trong ES6 thì có từ khóa let cho phép chúng ta khai báo biến trong phạm vi các khối lệnh. Các khối lệnh được định nghĩa bởi cặp ngoặc nhọn {}. Trong ES5, các khối không giới hạn phạm vi của các biến: function example (a,b) { if(a&amp;gt;b){ var temp = a; a = b; b = temp; } console(a); console(b); console(temp); } // example(10,5) // console: a = 5 // console: b = 10 // console: temp = 10; Và hãy so sánh với hàm này khi sử dụng let function example (a,b) { if(a&amp;gt;b){ let temp = a; a = b; b = temp; } console(a); console(b); console(temp); } // example(10,5) // console: a = 5 // console: b = 10 // console: temp = undefine; Đấy có nghĩa là biến temp chỉ có thể sử dụng trong {} mà nó bị bao phủ thôi còn khi ra ngoài nó sẽ tự động giải phóng giúp tiết kiệm tài nguyên. Còn const thì sao? đơn giản nó là hằng, mà hằng thì không bao giờ thay đổi function kaneFunction(oke) { const a = 0 if (oke) { const a = 100; } return a; } // kaneFunction(true) // console: a = 0</summary></entry><entry><title type="html">Một tuần tại {Be} Solution</title><link href="http://localhost:4000/intern-trip/2018/06/11/mot-tuan-tai-be-solution.html" rel="alternate" type="text/html" title="Một tuần tại {Be} Solution" /><published>2018-06-11T19:00:40+07:00</published><updated>2018-06-11T19:00:40+07:00</updated><id>http://localhost:4000/intern-trip/2018/06/11/mot-tuan-tai-be-solution</id><content type="html" xml:base="http://localhost:4000/intern-trip/2018/06/11/mot-tuan-tai-be-solution.html">&lt;p&gt;Hello !!!
Sau một tuần chúng tôi đã hoàn thành giao diện được giao, phải nói là gặp rất nhiều khó khăn trong phần javascript, tôi cảm thấy nghi ngơ về câu “Javascript is easy to learn” trên http://w3schools.com, có lẻ nó chỉ dễ cho học còn làm thì chưa chắc tới đâu.&lt;/p&gt;

&lt;p&gt;Tôi gặp một trở ngại khi phải làm việc với Javascript như là làm sao áp dụng &lt;code class=&quot;highlighter-rouge&quot;&gt;script&lt;/code&gt; cho một phần tử html chưa được render ra, và thật may là đàn anh của tôi hướng dẫn một tips này:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;	&lt;span class=&quot;nx&quot;&gt;jQuery&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;body&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;on&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;click&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;.file-drop-zone-title&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(){&lt;/span&gt;
	     &lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;#project-attachments&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;trigger&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'click'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; 
	&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Nó có nghĩa là sẽ chờ toàn bộ &lt;code class=&quot;highlighter-rouge&quot;&gt;body&lt;/code&gt; load xong và áp dụng &lt;code class=&quot;highlighter-rouge&quot;&gt;function()...&lt;/code&gt; vào một hoặc nhiều phần tử element đã chọn.
Đây là tài liệu về hàm này: http://api.jquery.com/on/&lt;/p&gt;

&lt;p&gt;Hay hiểu hơn là khi phần &lt;code class=&quot;highlighter-rouge&quot;&gt;.file-drop-zone-title&lt;/code&gt; được render thì &lt;code class=&quot;highlighter-rouge&quot;&gt;script&lt;/code&gt; đó đã chạy mất rồi, vì Javascript là một ngôn ngữ bất đồng bộ, nó thẩm chí đã chạy xong tất cả các &lt;code class=&quot;highlighter-rouge&quot;&gt;script&lt;/code&gt; trước khi html được render ra nếu không để trong &lt;code class=&quot;highlighter-rouge&quot;&gt;$(document).ready()&lt;/code&gt;, bất đồng bộ có nghĩa là nó không chạy theo trình tự lập trình thông thường mà nó sẽ chạy các hàm song song với nhau và chã bao giờ biết được hàm nào sẽ chạy trước.&lt;/p&gt;

&lt;p&gt;Sau này nếu học nâng cao hơn thì các bạn sẽ có phần xử lý bất đồng bộ trong javascript, à ở đây tôi sử dụng jQuery để tiện cho selector. cơ bản jQuery vẫn là Javascript thôi.&lt;/p&gt;

&lt;p&gt;Đây là một ví dụ nhỏ&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;	&lt;span class=&quot;nx&quot;&gt;jQuery&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;body&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;on&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;click&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;.file-drop-zone-title&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(){&lt;/span&gt;
	     &lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;#project-attachments&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;trigger&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'click'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; 
	&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
	&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Javascript sẽ đợi đến khi body load xong phần tử được chọn &lt;code class=&quot;highlighter-rouge&quot;&gt;.file-drop-zone-title&lt;/code&gt; và lúc đó bạn có thể áp dụng đúng javascript đúng như mong muốn, như ở trường hợp này class &lt;code class=&quot;highlighter-rouge&quot;&gt;.file-drop-zone-title&lt;/code&gt; chứa id &lt;code class=&quot;highlighter-rouge&quot;&gt;#project-attachments&lt;/code&gt; và tôi muốn chờ body load xong class &lt;code class=&quot;highlighter-rouge&quot;&gt;.file-drop-zone-title&lt;/code&gt; lúc này tôi áp dụng phần script trong &lt;code class=&quot;highlighter-rouge&quot;&gt;function(){...}&lt;/code&gt; cho phần tử có id là &lt;code class=&quot;highlighter-rouge&quot;&gt;#project-attachments&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Tôi mong là những người đọc blog này ít nhất có thể hiểu tôi đang viết về cài gì, đối với tôi việc viết blog này không chỉ là viết cho vui, tại đây tôi có thể cũng cố kiến thức của mình cũng như phát triển bản thân từng ngày.&lt;/p&gt;

&lt;p&gt;Chúc tất cả một ngày tốt lành.&lt;/p&gt;</content><author><name></name></author><category term="Intern-trip" /><summary type="html">Hello !!! Sau một tuần chúng tôi đã hoàn thành giao diện được giao, phải nói là gặp rất nhiều khó khăn trong phần javascript, tôi cảm thấy nghi ngơ về câu “Javascript is easy to learn” trên http://w3schools.com, có lẻ nó chỉ dễ cho học còn làm thì chưa chắc tới đâu. Tôi gặp một trở ngại khi phải làm việc với Javascript như là làm sao áp dụng script cho một phần tử html chưa được render ra, và thật may là đàn anh của tôi hướng dẫn một tips này: jQuery(&quot;body&quot;).on(&quot;click&quot;,&quot;.file-drop-zone-title&quot;, function(){ $(&quot;#project-attachments&quot;).trigger('click'); }); Nó có nghĩa là sẽ chờ toàn bộ body load xong và áp dụng function()... vào một hoặc nhiều phần tử element đã chọn. Đây là tài liệu về hàm này: http://api.jquery.com/on/ Hay hiểu hơn là khi phần .file-drop-zone-title được render thì script đó đã chạy mất rồi, vì Javascript là một ngôn ngữ bất đồng bộ, nó thẩm chí đã chạy xong tất cả các script trước khi html được render ra nếu không để trong $(document).ready(), bất đồng bộ có nghĩa là nó không chạy theo trình tự lập trình thông thường mà nó sẽ chạy các hàm song song với nhau và chã bao giờ biết được hàm nào sẽ chạy trước. Sau này nếu học nâng cao hơn thì các bạn sẽ có phần xử lý bất đồng bộ trong javascript, à ở đây tôi sử dụng jQuery để tiện cho selector. cơ bản jQuery vẫn là Javascript thôi. Đây là một ví dụ nhỏ jQuery(&quot;body&quot;).on(&quot;click&quot;,&quot;.file-drop-zone-title&quot;, function(){ $(&quot;#project-attachments&quot;).trigger('click'); }); Javascript sẽ đợi đến khi body load xong phần tử được chọn .file-drop-zone-title và lúc đó bạn có thể áp dụng đúng javascript đúng như mong muốn, như ở trường hợp này class .file-drop-zone-title chứa id #project-attachments và tôi muốn chờ body load xong class .file-drop-zone-title lúc này tôi áp dụng phần script trong function(){...} cho phần tử có id là #project-attachments. Tôi mong là những người đọc blog này ít nhất có thể hiểu tôi đang viết về cài gì, đối với tôi việc viết blog này không chỉ là viết cho vui, tại đây tôi có thể cũng cố kiến thức của mình cũng như phát triển bản thân từng ngày. Chúc tất cả một ngày tốt lành.</summary></entry><entry><title type="html">Một tháng tại {Be} Solution</title><link href="http://localhost:4000/intern-trip/2018/06/04/mot-thang-tai-be-solution.html" rel="alternate" type="text/html" title="Một tháng tại {Be} Solution" /><published>2018-06-04T17:32:40+07:00</published><updated>2018-06-04T17:32:40+07:00</updated><id>http://localhost:4000/intern-trip/2018/06/04/mot-thang-tai-be-solution</id><content type="html" xml:base="http://localhost:4000/intern-trip/2018/06/04/mot-thang-tai-be-solution.html">&lt;p&gt;Sau hơn một tháng thực tập tại đây thì tôi và Eric đã hoàn thành phần trainer của mình và anh leader đã chuyển chúng tôi cho anh Mark - người đang quản lí một vài dự án.&lt;/p&gt;

&lt;p&gt;Chúng tôi lại được anh Mark phân công support tìm bug cho một website khách hàng, cụ thể là chúng tôi đang làm việc của một tester - tìm lỗi, tôi không chắc công việc của một &lt;code class=&quot;highlighter-rouge&quot;&gt;tester&lt;/code&gt; là như thế nào nhưng tôi chắc là tôi đang làm việc trên website của khách hàng như là một &lt;code class=&quot;highlighter-rouge&quot;&gt;người dùng &lt;/code&gt; và vừa là &lt;code class=&quot;highlighter-rouge&quot;&gt;admin&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Tôi phải tiếp xúc với một &lt;code class=&quot;highlighter-rouge&quot;&gt;framework&lt;/code&gt; mới là &lt;code class=&quot;highlighter-rouge&quot;&gt;Magento&lt;/code&gt;, framework này chúng tôi chưa đụng vào bao giờ, xem sơ sơ trên google thì theo tôi được biết là một framework được sử dụng nhiều cho các trang web bán hàng. Và chúng tôi cũng chẳng được đụng vào code đâu, công việc của chúng tôi chỉ là ngồi test lỗi thôi, thêm vào đó tôi được cấp một account quản trị để xem &lt;code class=&quot;highlighter-rouge&quot;&gt;record&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Khách hàng của chúng tôi là một công ty bán hàng trực tuyến ở Singapore và đương nhiên tôi muốn tiết lộ thông tin khách hàng được, dù nó được cho phép hay không :D.&lt;/p&gt;

&lt;p&gt;Website này đang gặp một &lt;code class=&quot;highlighter-rouge&quot;&gt;bug&lt;/code&gt; rất nghiêm trọng trong phần thanh toán Paypal và Wirecard, bạn biết đấy những gì liên quan đến tiền bạc thì thường rất rắc rối. Và có vẻ như cty này đã bị &lt;code class=&quot;highlighter-rouge&quot;&gt;hack&lt;/code&gt;, anh Mark - nói với chúng tôi hiện có 2 &lt;code class=&quot;highlighter-rouge&quot;&gt;issue&lt;/code&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Khi khách hàng thanh toán bằng Paypal thì thông thường nếu đúng chỉ xuất hiện 2 &lt;code class=&quot;highlighter-rouge&quot;&gt;transaction&lt;/code&gt; là khi khách hàng thanh toán thành công Paypal hoặc Wirecard và khi xuất hóa đơn nhưng vì một lý do cố tình hoặc &lt;code class=&quot;highlighter-rouge&quot;&gt;bug&lt;/code&gt;. Theo báo cáo của khách hàng họ thấy rằng có một đơn hàng xuất hiện thêm một transaction thứ 3 bằng Wirecard khi người dùng chỉ thanh toán bằng Paypal, khách hàng của tôi đã bị &lt;code class=&quot;highlighter-rouge&quot;&gt;hack&lt;/code&gt;.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Vấn đề thứ 2 là khi người dùng mở 2 &lt;code class=&quot;highlighter-rouge&quot;&gt;tab&lt;/code&gt; trên &lt;code class=&quot;highlighter-rouge&quot;&gt;browser&lt;/code&gt; thì một tab họ tiến hành thanh toán, tab còn lại họ tiếp tục mua, lúc này hệ thông của chúng tôi lại thanh toán tất cả một lượt, để dễ hiểu ta đặt trường hợp nếu trong tab thứ 2 họ chỉ muốn cho vào gỏ hàng mà chưa muốn thanh toán, nhưng ở tab đầu tiên họ ` đang ` tiến hành thanh toán thật không may lúc đấy họ đang mua ở tab thứ 2 và hệ thống của chúng tôi lại thanh toán luôn, thật đau đầu! anh Mark muốn nó chỉ thanh toán cho gỏ hàng hiện tại của tab 1.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Vấn đề thứ 2 chúng tôi không cần quan tâm vì công việc của một tester là làm sao để nó xuất hiện lỗi, nếu có một điều gì đó bất thường khi ta lặp đi lặp lại những thao tác đó nhiều lần thì đó là &lt;code class=&quot;highlighter-rouge&quot;&gt;bug&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Tính tới thời điểm hiện tại chúng tôi vẫn chưa fix xong lỗi thứ 2 và chưa tìm ra nguyên nhân của lỗi thứ 1. Công việc này của một tester chẵng dễ dàng chút nào ~~, có thể website gặp bug, còn tệ hơn là chúng tôi bị hack.&lt;/p&gt;

&lt;p&gt;À cái hình ở caption là lúc những senpai của tôi ngủ trưa đấy, bạn có thể trãi niệm, hoặc túi ngủ ra ngủ tại bàn làm việc của mình, vì làm việc 8h/ngày tôi phải ngủ 30 phút để lấy lại tỉnh táo cho đến 5h30 đây.&lt;/p&gt;

&lt;p&gt;Chúc tất cả một ngày tốt lành!.&lt;/p&gt;</content><author><name></name></author><category term="Intern-trip" /><summary type="html">Sau hơn một tháng thực tập tại đây thì tôi và Eric đã hoàn thành phần trainer của mình và anh leader đã chuyển chúng tôi cho anh Mark - người đang quản lí một vài dự án. Chúng tôi lại được anh Mark phân công support tìm bug cho một website khách hàng, cụ thể là chúng tôi đang làm việc của một tester - tìm lỗi, tôi không chắc công việc của một tester là như thế nào nhưng tôi chắc là tôi đang làm việc trên website của khách hàng như là một người dùng và vừa là admin. Tôi phải tiếp xúc với một framework mới là Magento, framework này chúng tôi chưa đụng vào bao giờ, xem sơ sơ trên google thì theo tôi được biết là một framework được sử dụng nhiều cho các trang web bán hàng. Và chúng tôi cũng chẳng được đụng vào code đâu, công việc của chúng tôi chỉ là ngồi test lỗi thôi, thêm vào đó tôi được cấp một account quản trị để xem record. Khách hàng của chúng tôi là một công ty bán hàng trực tuyến ở Singapore và đương nhiên tôi muốn tiết lộ thông tin khách hàng được, dù nó được cho phép hay không :D. Website này đang gặp một bug rất nghiêm trọng trong phần thanh toán Paypal và Wirecard, bạn biết đấy những gì liên quan đến tiền bạc thì thường rất rắc rối. Và có vẻ như cty này đã bị hack, anh Mark - nói với chúng tôi hiện có 2 issue Khi khách hàng thanh toán bằng Paypal thì thông thường nếu đúng chỉ xuất hiện 2 transaction là khi khách hàng thanh toán thành công Paypal hoặc Wirecard và khi xuất hóa đơn nhưng vì một lý do cố tình hoặc bug. Theo báo cáo của khách hàng họ thấy rằng có một đơn hàng xuất hiện thêm một transaction thứ 3 bằng Wirecard khi người dùng chỉ thanh toán bằng Paypal, khách hàng của tôi đã bị hack. Vấn đề thứ 2 là khi người dùng mở 2 tab trên browser thì một tab họ tiến hành thanh toán, tab còn lại họ tiếp tục mua, lúc này hệ thông của chúng tôi lại thanh toán tất cả một lượt, để dễ hiểu ta đặt trường hợp nếu trong tab thứ 2 họ chỉ muốn cho vào gỏ hàng mà chưa muốn thanh toán, nhưng ở tab đầu tiên họ ` đang ` tiến hành thanh toán thật không may lúc đấy họ đang mua ở tab thứ 2 và hệ thống của chúng tôi lại thanh toán luôn, thật đau đầu! anh Mark muốn nó chỉ thanh toán cho gỏ hàng hiện tại của tab 1. Vấn đề thứ 2 chúng tôi không cần quan tâm vì công việc của một tester là làm sao để nó xuất hiện lỗi, nếu có một điều gì đó bất thường khi ta lặp đi lặp lại những thao tác đó nhiều lần thì đó là bug. Tính tới thời điểm hiện tại chúng tôi vẫn chưa fix xong lỗi thứ 2 và chưa tìm ra nguyên nhân của lỗi thứ 1. Công việc này của một tester chẵng dễ dàng chút nào ~~, có thể website gặp bug, còn tệ hơn là chúng tôi bị hack. À cái hình ở caption là lúc những senpai của tôi ngủ trưa đấy, bạn có thể trãi niệm, hoặc túi ngủ ra ngủ tại bàn làm việc của mình, vì làm việc 8h/ngày tôi phải ngủ 30 phút để lấy lại tỉnh táo cho đến 5h30 đây. Chúc tất cả một ngày tốt lành!.</summary></entry><entry><title type="html">Ngày đầu thực tập tại {Be} Solution</title><link href="http://localhost:4000/intern-trip/2018/06/04/ngay-dau-thuc-tap-tai-be-solution.html" rel="alternate" type="text/html" title="Ngày đầu thực tập tại {Be} Solution" /><published>2018-06-04T17:32:40+07:00</published><updated>2018-06-04T17:32:40+07:00</updated><id>http://localhost:4000/intern-trip/2018/06/04/ngay-dau-thuc-tap-tai-be-solution</id><content type="html" xml:base="http://localhost:4000/intern-trip/2018/06/04/ngay-dau-thuc-tap-tai-be-solution.html">&lt;p&gt;Xin chào, tôi là Hiếu nickname là Kane hiện đang là sinh viên năm 3 trường đại học Trà Vinh, năm 3 này tôi được đi thực tập tại một cty outsource ở TP HCM là Be Solutions, ở đây tôi được rất nhiều người hướng dẫn tùy vào từng giai đoạn thực tập, người hướng dẫn tôi anh Yang Nguyễn đặt ra 3 yêu cầu phải làm trong khóa thực tập này bao gồm:&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;Bootstrap 3 or 4 (bao gồm jQuery)&lt;/li&gt;
  &lt;li&gt;Yii 2&lt;/li&gt;
  &lt;li&gt;Một số CMS lớn&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Chúng tôi gồm 3 người @Eric @Groot và tôi, lúc đầu cả 3 đều rất bỡ ngở vì cũng là lần đầu lên Sài Gòn mọi thứ đều mới mẽ và nhiều lúc tôi cảm thấy bị nghẹt thở vì cái nhộn nhịp của cái trốn này.
Chúng tôi được hướng dẫn đến một nơi tại địa chỉ: International Plaza 343 Pham Ngu Lao, Pham Ngu Lao Ward, District 1, Ho Chi Minh city, Vietnam.&lt;/p&gt;

&lt;p&gt;Chúng tôi đến rất sớm và phải chờ khoảng 15 phút vì cty bắt đầu làm việc từ lúc 8h30, vào văn phòng tôi được một chị bên HR là chị Mary Vu hướng giới thiệu một số thông tin cũng như người hướng dẫn thực tập ở đây, tôi và Eric được anh Yang Nguyen hướng dẫn còn Groot thì tôi không gõ vì nó làm bên .Net còn tôi và Eric làm bên PHP.&lt;/p&gt;

&lt;p&gt;Điều tôi thích nhất ở đây là môi trường làm việc rất năng động, những nhân viên ở đây đều hòa đồng vui vẻ nhất là bên team chúng tôi (PHP). Công việc đầu tiên của tôi là làm một trang html tĩnh nhưng phải làm theo những gì đã được design từ trước, chúng tôi phải sử dụng photoshop để cắt và đo đúng kích thước, công việc này yêu cầu phải làm trang web hoạt động trên mọi thiết bị hay còn gọi là responsive.&lt;/p&gt;

&lt;p&gt;Phần tôi thích nhất trong job này là code javascript tự động cộng dồn item khi responsive, nó khá hay và hấp dẫn.&lt;/p&gt;

&lt;p&gt;5h30 chúng tôi kết thúc buổi làm việc và ra về.&lt;/p&gt;</content><author><name></name></author><category term="Intern-trip" /><summary type="html">Xin chào, tôi là Hiếu nickname là Kane hiện đang là sinh viên năm 3 trường đại học Trà Vinh, năm 3 này tôi được đi thực tập tại một cty outsource ở TP HCM là Be Solutions, ở đây tôi được rất nhiều người hướng dẫn tùy vào từng giai đoạn thực tập, người hướng dẫn tôi anh Yang Nguyễn đặt ra 3 yêu cầu phải làm trong khóa thực tập này bao gồm: Bootstrap 3 or 4 (bao gồm jQuery) Yii 2 Một số CMS lớn</summary></entry></feed>