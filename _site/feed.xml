<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.8.3">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2018-07-04T20:03:11+07:00</updated><id>http://localhost:4000/</id><title type="html">Kane’s Blog</title><subtitle>Hi I am Kane </subtitle><entry><title type="html">Điểm qua những tính năng hấp dẫn trong ES6 - Phần 1</title><link href="http://localhost:4000/coding/2018/07/04/diem-qua-nhung-tinh-nang-hap-dan-trong-es6-phan-1.html" rel="alternate" type="text/html" title="Điểm qua những tính năng hấp dẫn trong ES6 - Phần 1" /><published>2018-07-04T15:15:40+07:00</published><updated>2018-07-04T15:15:40+07:00</updated><id>http://localhost:4000/coding/2018/07/04/diem-qua-nhung-tinh-nang-hap-dan-trong-es6-phan-1</id><content type="html" xml:base="http://localhost:4000/coding/2018/07/04/diem-qua-nhung-tinh-nang-hap-dan-trong-es6-phan-1.html">&lt;p&gt;Sau một thời gian nghiên cứu về ReactJS tôi nhận ra mình còn chưa ổn về javascript và tham khảo trên mạng thì có một thành viên trong nhóm nói rằng: “Chưa nghiêm cứu về ES6 mà đã vội học ReactJS là một sai lầm”, ai cũng thế khi nghe nói như vậy thì chắc hẵn sẽ nghĩ là ES6 lợi hại vậy sao?, có lẻ mình đã cầm đèn chạy trước oto rồi.&lt;/p&gt;

&lt;p&gt;Học vững cái căn bản và tiếp thu công nghệ, bạn không thể sống mãi ở thế kỉ 20 được, vậy nên hôm nay tôi muốn note lại cho mình những tính năng tôi thích nhất trong ES6.&lt;/p&gt;

&lt;h2 id=&quot;1-default-parameters-in-es6&quot;&gt;1. Default Parameters in ES6&lt;/h2&gt;

&lt;p&gt;Tôi còn tưởng rằng nó đã có từ lâu vì đã quen đặt giá trị mặc định cho parameters từ PHP nên khi thấy ES6 có tính năng này tôi tưởng mình đã đi trước từ lâu :D&lt;/p&gt;

&lt;p&gt;Lúc trước thì để đặt một parameters mặc định ta làm như sau:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;link&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;height&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;color&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;height&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;height&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;50&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;color&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;color&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'red'&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;url&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;url&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'http://azat.co'&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;...&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;ES6 xuất hiện, chúng ta có thể đặt giá trị mặc định trong &lt;code class=&quot;highlighter-rouge&quot;&gt;()&lt;/code&gt; của &lt;code class=&quot;highlighter-rouge&quot;&gt;function&lt;/code&gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;link&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;height&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;50&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;color&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'red'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;url&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'http://azat.co'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;...&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Tất nhiên nó chỉ là mặc định, chúng ta có thể thay đổi nó trong thân function, ý nghĩa của việc để giá trị mặc định là giúp ta luôn đúng trong mọi trường hợp, thử nghĩ mà xem nếu ta không truyền vào màu của một đoạn text thì không lẻ nó trông suốt không màu :D, vậy nên color mặc định trong trường hợp này có thể là màu đen hoặc một màu nào đó bạn muốn default.&lt;/p&gt;

&lt;h2 id=&quot;2-template-literals-in-es6&quot;&gt;2. Template Literals in ES6&lt;/h2&gt;

&lt;p&gt;Template Literals hay &lt;code class=&quot;highlighter-rouge&quot;&gt;interpolation&lt;/code&gt; trong các ngôn ngữ khác là một cách hiển thị các biến trong chuỗi. Trong ES5 chúng ta làm như thế này:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'Your name is '&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;first&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;' '&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;last&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'.'&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;url&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'http://localhost:3000/api/messages/'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;id&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Khi học về tính năng của một ngôn ngữ nào đó các bạn nhớ phải để ý xem từ khóa tiếng anh của tính năng đó là như thế nào để thuận tiện cho việc ghi nhớ cũng như pro lên như ở đây là &lt;code class=&quot;highlighter-rouge&quot;&gt;interpolation&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Trở lại vấn đề trong ES6 chúng ta có thể sử dụng cú pháp mới ${name} bên trong chuỗi:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;`Your name is &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;first&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;last&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;.`&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;url&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;`http://localhost:3000/api/messages/&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;`&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Tính năng này cũng có trong PHP, tôi không nhớ là ở version bao nhiêu nhưng tôi sử dụng được ở PHP như:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-php&quot; data-lang=&quot;php&quot;&gt;	&lt;span class=&quot;nv&quot;&gt;$name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'Kane'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;' Hello $name!'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Ngoài lề tí thôi tiếp tục tính năng khác nào.&lt;/p&gt;

&lt;h2 id=&quot;3-multi-line-string-in-es6&quot;&gt;3. Multi-line String in ES6&lt;/h2&gt;

&lt;p&gt;Một syntactic sugar khác là chuỗi có nhiều dòng (multi-line string). Trong ES5, chúng ta làm như thế này:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;roadPoem&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'Then took the other, as just as fair,&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;t'&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'And having perhaps the better claim&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;t'&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'Because it was grassy and wanted wear,&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;t'&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'Though as for that the passing there&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;t'&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'Had worn them really about the same,&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;t'&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;fourAgreements&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'You have the right to be you.&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;
    You can only be you when you do your best.'&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Thật sự tôi rất ít khi viết nhiều như thế này trong 1 biến javascript nhưng có thì xem biết đâu chừng có ngày sử dụng.&lt;/p&gt;

&lt;p&gt;Trong ES6, chỉ cần sử dụng dấu backticks: ` `` `&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;roadPoem&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;`Then took the other, as just as fair,
    And having perhaps the better claim
    Because it was grassy and wanted wear,
    Though as for that the passing there
    Had worn them really about the same,`&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;fourAgreements&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;`You have the right to be you.
    You can only be you when you do your best.`&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h2 id=&quot;4-block-scoped-constructs-let-and-const&quot;&gt;4. Block-Scoped Constructs Let and Const&lt;/h2&gt;

&lt;p&gt;Tính năng này cho ta thêm một cách khai báo biến nhưng có trong phạm vi block, các bạn nào có học về OOP thì chắc chắn có hiểu biết về phạm vi biến như private, public, protected các kiểu nhưng là giữa các &lt;code class=&quot;highlighter-rouge&quot;&gt;class&lt;/code&gt; với nhau.&lt;/p&gt;

&lt;p&gt;Block-Scoped trong ES6 thì có từ khóa &lt;code class=&quot;highlighter-rouge&quot;&gt;let&lt;/code&gt; cho phép chúng ta khai báo biến trong phạm vi các khối lệnh. Các khối lệnh được định nghĩa bởi cặp ngoặc nhọn {}. Trong ES5, các khối không giới hạn phạm vi của các biến:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;example&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
		&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;temp&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
		&lt;span class=&quot;nx&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
		&lt;span class=&quot;nx&quot;&gt;b&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;temp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;temp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// example(10,5)
&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// console: a = 5
&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// console: b = 10
&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// console: temp = 10;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Và hãy so sánh với hàm này khi sử dụng &lt;code class=&quot;highlighter-rouge&quot;&gt;let&lt;/code&gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;example&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
		&lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;temp&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
		&lt;span class=&quot;nx&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
		&lt;span class=&quot;nx&quot;&gt;b&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;temp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;temp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// example(10,5)
&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// console: a = 5
&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// console: b = 10
&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// console: temp = undefine;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Đấy có nghĩa là biến &lt;code class=&quot;highlighter-rouge&quot;&gt;temp&lt;/code&gt; chỉ có thể sử dụng trong &lt;code class=&quot;highlighter-rouge&quot;&gt;{}&lt;/code&gt; mà nó bị bao phủ thôi còn khi ra ngoài nó sẽ tự động giải phóng giúp tiết kiệm tài nguyên.&lt;/p&gt;

&lt;p&gt;Còn &lt;code class=&quot;highlighter-rouge&quot;&gt;const&lt;/code&gt; thì sao? đơn giản nó là hằng, mà hằng thì không bao giờ thay đổi&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;kaneFunction&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;oke&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;  
  &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;oke&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;100&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; 
  
  &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// kaneFunction(true)
&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// console: a = 0&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;</content><author><name></name></author><category term="Coding" /><summary type="html">Sau một thời gian nghiên cứu về ReactJS tôi nhận ra mình còn chưa ổn về javascript và tham khảo trên mạng thì có một thành viên trong nhóm nói rằng: “Chưa nghiêm cứu về ES6 mà đã vội học ReactJS là một sai lầm”, ai cũng thế khi nghe nói như vậy thì chắc hẵn sẽ nghĩ là ES6 lợi hại vậy sao?, có lẻ mình đã cầm đèn chạy trước oto rồi. Học vững cái căn bản và tiếp thu công nghệ, bạn không thể sống mãi ở thế kỉ 20 được, vậy nên hôm nay tôi muốn note lại cho mình những tính năng tôi thích nhất trong ES6. 1. Default Parameters in ES6 Tôi còn tưởng rằng nó đã có từ lâu vì đã quen đặt giá trị mặc định cho parameters từ PHP nên khi thấy ES6 có tính năng này tôi tưởng mình đã đi trước từ lâu :D Lúc trước thì để đặt một parameters mặc định ta làm như sau: var link = function (height, color, url) { var height = height || 50 var color = color || 'red' var url = url || 'http://azat.co' ... } ES6 xuất hiện, chúng ta có thể đặt giá trị mặc định trong () của function var link = function(height = 50, color = 'red', url = 'http://azat.co') { ... } Tất nhiên nó chỉ là mặc định, chúng ta có thể thay đổi nó trong thân function, ý nghĩa của việc để giá trị mặc định là giúp ta luôn đúng trong mọi trường hợp, thử nghĩ mà xem nếu ta không truyền vào màu của một đoạn text thì không lẻ nó trông suốt không màu :D, vậy nên color mặc định trong trường hợp này có thể là màu đen hoặc một màu nào đó bạn muốn default. 2. Template Literals in ES6 Template Literals hay interpolation trong các ngôn ngữ khác là một cách hiển thị các biến trong chuỗi. Trong ES5 chúng ta làm như thế này: var name = 'Your name is ' + first + ' ' + last + '.' var url = 'http://localhost:3000/api/messages/' + id Khi học về tính năng của một ngôn ngữ nào đó các bạn nhớ phải để ý xem từ khóa tiếng anh của tính năng đó là như thế nào để thuận tiện cho việc ghi nhớ cũng như pro lên như ở đây là interpolation. Trở lại vấn đề trong ES6 chúng ta có thể sử dụng cú pháp mới ${name} bên trong chuỗi: var name = `Your name is ${first} ${last}.` var url = `http://localhost:3000/api/messages/${id}` Tính năng này cũng có trong PHP, tôi không nhớ là ở version bao nhiêu nhưng tôi sử dụng được ở PHP như: $name = 'Kane'; echo ' Hello $name!'; Ngoài lề tí thôi tiếp tục tính năng khác nào. 3. Multi-line String in ES6 Một syntactic sugar khác là chuỗi có nhiều dòng (multi-line string). Trong ES5, chúng ta làm như thế này: var roadPoem = 'Then took the other, as just as fair,\n\t' + 'And having perhaps the better claim\n\t' + 'Because it was grassy and wanted wear,\n\t' + 'Though as for that the passing there\n\t' + 'Had worn them really about the same,\n\t' var fourAgreements = 'You have the right to be you.\n\ You can only be you when you do your best.' Thật sự tôi rất ít khi viết nhiều như thế này trong 1 biến javascript nhưng có thì xem biết đâu chừng có ngày sử dụng. Trong ES6, chỉ cần sử dụng dấu backticks: ` `` ` var roadPoem = `Then took the other, as just as fair, And having perhaps the better claim Because it was grassy and wanted wear, Though as for that the passing there Had worn them really about the same,` var fourAgreements = `You have the right to be you. You can only be you when you do your best.` 4. Block-Scoped Constructs Let and Const Tính năng này cho ta thêm một cách khai báo biến nhưng có trong phạm vi block, các bạn nào có học về OOP thì chắc chắn có hiểu biết về phạm vi biến như private, public, protected các kiểu nhưng là giữa các class với nhau. Block-Scoped trong ES6 thì có từ khóa let cho phép chúng ta khai báo biến trong phạm vi các khối lệnh. Các khối lệnh được định nghĩa bởi cặp ngoặc nhọn {}. Trong ES5, các khối không giới hạn phạm vi của các biến: function example (a,b) { if(a&amp;gt;b){ var temp = a; a = b; b = temp; } console(a); console(b); console(temp); } // example(10,5) // console: a = 5 // console: b = 10 // console: temp = 10; Và hãy so sánh với hàm này khi sử dụng let function example (a,b) { if(a&amp;gt;b){ let temp = a; a = b; b = temp; } console(a); console(b); console(temp); } // example(10,5) // console: a = 5 // console: b = 10 // console: temp = undefine; Đấy có nghĩa là biến temp chỉ có thể sử dụng trong {} mà nó bị bao phủ thôi còn khi ra ngoài nó sẽ tự động giải phóng giúp tiết kiệm tài nguyên. Còn const thì sao? đơn giản nó là hằng, mà hằng thì không bao giờ thay đổi function kaneFunction(oke) { const a = 0 if (oke) { const a = 100; } return a; } // kaneFunction(true) // console: a = 0</summary></entry><entry><title type="html">Một tuần tại {Be} Solution</title><link href="http://localhost:4000/coding/2018/06/11/mot-tuan-tai-be-solution.html" rel="alternate" type="text/html" title="Một tuần tại {Be} Solution" /><published>2018-06-11T19:00:40+07:00</published><updated>2018-06-11T19:00:40+07:00</updated><id>http://localhost:4000/coding/2018/06/11/mot-tuan-tai-be-solution</id><content type="html" xml:base="http://localhost:4000/coding/2018/06/11/mot-tuan-tai-be-solution.html">&lt;p&gt;Hello !!!
Sau một tuần chúng tôi đã hoàn thành giao diện được giao, phải nói là gặp rất nhiều khó khăn trong phần javascript, tôi cảm thấy nghi ngơ về câu “Javascript is easy to learn” trên http://w3schools.com, có lẻ nó chỉ dễ cho học còn làm thì chưa chắc tới đâu.&lt;/p&gt;

&lt;p&gt;Tôi gặp một trở ngại khi phải làm việc với Javascript như là làm sao áp dụng &lt;code class=&quot;highlighter-rouge&quot;&gt;script&lt;/code&gt; cho một phần tử html chưa được render ra, và thật may là đàn anh của tôi hướng dẫn một tips này:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;	&lt;span class=&quot;nx&quot;&gt;jQuery&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;body&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;on&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;click&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;.file-drop-zone-title&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(){&lt;/span&gt;
	     &lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;#project-attachments&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;trigger&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'click'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; 
	&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Nó có nghĩa là sẽ chờ toàn bộ &lt;code class=&quot;highlighter-rouge&quot;&gt;body&lt;/code&gt; load xong và áp dụng &lt;code class=&quot;highlighter-rouge&quot;&gt;function()...&lt;/code&gt; vào một hoặc nhiều phần tử element đã chọn.
Đây là tài liệu về hàm này: http://api.jquery.com/on/&lt;/p&gt;

&lt;p&gt;Hay hiểu hơn là khi phần &lt;code class=&quot;highlighter-rouge&quot;&gt;.file-drop-zone-title&lt;/code&gt; được render thì &lt;code class=&quot;highlighter-rouge&quot;&gt;script&lt;/code&gt; đó đã chạy mất rồi, vì Javascript là một ngôn ngữ bất đồng bộ, nó thẩm chí đã chạy xong tất cả các &lt;code class=&quot;highlighter-rouge&quot;&gt;script&lt;/code&gt; trước khi html được render ra nếu không để trong &lt;code class=&quot;highlighter-rouge&quot;&gt;$(document).ready()&lt;/code&gt;, bất đồng bộ có nghĩa là nó không chạy theo trình tự lập trình thông thường mà nó sẽ chạy các hàm song song với nhau và chã bao giờ biết được hàm nào sẽ chạy trước.&lt;/p&gt;

&lt;p&gt;Sau này nếu học nâng cao hơn thì các bạn sẽ có phần xử lý bất đồng bộ trong javascript, à ở đây tôi sử dụng jQuery để tiện cho selector. cơ bản jQuery vẫn là Javascript thôi.&lt;/p&gt;

&lt;p&gt;Đây là một ví dụ nhỏ&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;	&lt;span class=&quot;nx&quot;&gt;jQuery&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;body&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;on&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;click&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;.file-drop-zone-title&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(){&lt;/span&gt;
	     &lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;#project-attachments&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;trigger&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'click'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; 
	&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
	&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Javascript sẽ đợi đến khi body load xong phần tử được chọn &lt;code class=&quot;highlighter-rouge&quot;&gt;.file-drop-zone-title&lt;/code&gt; và lúc đó bạn có thể áp dụng đúng javascript đúng như mong muốn, như ở trường hợp này class &lt;code class=&quot;highlighter-rouge&quot;&gt;.file-drop-zone-title&lt;/code&gt; chứa id &lt;code class=&quot;highlighter-rouge&quot;&gt;#project-attachments&lt;/code&gt; và tôi muốn chờ body load xong class &lt;code class=&quot;highlighter-rouge&quot;&gt;.file-drop-zone-title&lt;/code&gt; lúc này tôi áp dụng phần script trong &lt;code class=&quot;highlighter-rouge&quot;&gt;function(){...}&lt;/code&gt; cho phần tử có id là &lt;code class=&quot;highlighter-rouge&quot;&gt;#project-attachments&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Tôi mong là những người đọc blog này ít nhất có thể hiểu tôi đang viết về cài gì, đối với tôi việc viết blog này không chỉ là viết cho vui, tại đây tôi có thể cũng cố kiến thức của mình cũng như phát triển bản thân từng ngày.&lt;/p&gt;

&lt;p&gt;Chúc tất cả một ngày tốt lành.&lt;/p&gt;</content><author><name></name></author><category term="Coding" /><summary type="html">Hello !!! Sau một tuần chúng tôi đã hoàn thành giao diện được giao, phải nói là gặp rất nhiều khó khăn trong phần javascript, tôi cảm thấy nghi ngơ về câu “Javascript is easy to learn” trên http://w3schools.com, có lẻ nó chỉ dễ cho học còn làm thì chưa chắc tới đâu. Tôi gặp một trở ngại khi phải làm việc với Javascript như là làm sao áp dụng script cho một phần tử html chưa được render ra, và thật may là đàn anh của tôi hướng dẫn một tips này: jQuery(&quot;body&quot;).on(&quot;click&quot;,&quot;.file-drop-zone-title&quot;, function(){ $(&quot;#project-attachments&quot;).trigger('click'); }); Nó có nghĩa là sẽ chờ toàn bộ body load xong và áp dụng function()... vào một hoặc nhiều phần tử element đã chọn. Đây là tài liệu về hàm này: http://api.jquery.com/on/ Hay hiểu hơn là khi phần .file-drop-zone-title được render thì script đó đã chạy mất rồi, vì Javascript là một ngôn ngữ bất đồng bộ, nó thẩm chí đã chạy xong tất cả các script trước khi html được render ra nếu không để trong $(document).ready(), bất đồng bộ có nghĩa là nó không chạy theo trình tự lập trình thông thường mà nó sẽ chạy các hàm song song với nhau và chã bao giờ biết được hàm nào sẽ chạy trước. Sau này nếu học nâng cao hơn thì các bạn sẽ có phần xử lý bất đồng bộ trong javascript, à ở đây tôi sử dụng jQuery để tiện cho selector. cơ bản jQuery vẫn là Javascript thôi. Đây là một ví dụ nhỏ jQuery(&quot;body&quot;).on(&quot;click&quot;,&quot;.file-drop-zone-title&quot;, function(){ $(&quot;#project-attachments&quot;).trigger('click'); }); Javascript sẽ đợi đến khi body load xong phần tử được chọn .file-drop-zone-title và lúc đó bạn có thể áp dụng đúng javascript đúng như mong muốn, như ở trường hợp này class .file-drop-zone-title chứa id #project-attachments và tôi muốn chờ body load xong class .file-drop-zone-title lúc này tôi áp dụng phần script trong function(){...} cho phần tử có id là #project-attachments. Tôi mong là những người đọc blog này ít nhất có thể hiểu tôi đang viết về cài gì, đối với tôi việc viết blog này không chỉ là viết cho vui, tại đây tôi có thể cũng cố kiến thức của mình cũng như phát triển bản thân từng ngày. Chúc tất cả một ngày tốt lành.</summary></entry><entry><title type="html">Ngày đầu thực tập tại {Be} Solution</title><link href="http://localhost:4000/coding/2018/06/04/ngay-dau-thuc-tap-tai-be-solution.html" rel="alternate" type="text/html" title="Ngày đầu thực tập tại {Be} Solution" /><published>2018-06-04T17:32:40+07:00</published><updated>2018-06-04T17:32:40+07:00</updated><id>http://localhost:4000/coding/2018/06/04/ngay-dau-thuc-tap-tai-be-solution</id><content type="html" xml:base="http://localhost:4000/coding/2018/06/04/ngay-dau-thuc-tap-tai-be-solution.html">&lt;p&gt;Xin chào, tôi là Hiếu nickname là Kane hiện đang là sinh viên năm 3 trường đại học Trà Vinh, năm 3 này tôi được đi thực tập tại một cty outsource ở TP HCM là Be Solutions, ở đây tôi được rất nhiều người hướng dẫn tùy vào từng giai đoạn thực tập, người hướng dẫn tôi anh Yang Nguyễn đặt ra 3 yêu cầu phải làm trong khóa thực tập này bao gồm:&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;Bootstrap 3 or 4 (bao gồm jQuery)&lt;/li&gt;
  &lt;li&gt;Yii 2&lt;/li&gt;
  &lt;li&gt;Một số CMS lớn&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Chúng tôi gồm 3 người @Eric @Groot và tôi, lúc đầu cả 3 đều rất bỡ ngở vì cũng là lần đầu lên Sài Gòn mọi thứ đều mới mẽ và nhiều lúc tôi cảm thấy bị nghẹt thở vì cái nhộn nhịp của cái trốn này.
Chúng tôi được hướng dẫn đến một nơi tại địa chỉ: International Plaza 343 Pham Ngu Lao, Pham Ngu Lao Ward, District 1, Ho Chi Minh city, Vietnam.&lt;/p&gt;

&lt;p&gt;Chúng tôi đến rất sớm và phải chờ khoảng 15 phút vì cty bắt đầu làm việc từ lúc 8h30, vào văn phòng tôi được một chị bên HR là chị Mary Vu hướng giới thiệu một số thông tin cũng như người hướng dẫn thực tập ở đây, tôi và Eric được anh Yang Nguyen hướng dẫn còn Groot thì tôi không gõ vì nó làm bên .Net còn tôi và Eric làm bên PHP.&lt;/p&gt;

&lt;p&gt;Điều tôi thích nhất ở đây là môi trường làm việc rất năng động, những nhân viên ở đây đều hòa đồng vui vẻ nhất là bên team chúng tôi (PHP). Công việc đầu tiên của tôi là làm một trang html tĩnh nhưng phải làm theo những gì đã được design từ trước, chúng tôi phải sử dụng photoshop để cắt và đo đúng kích thước, công việc này yêu cầu phải làm trang web hoạt động trên mọi thiết bị hay còn gọi là responsive.&lt;/p&gt;

&lt;p&gt;Phần tôi thích nhất trong job này là code javascript tự động cộng dồn item khi responsive, nó khá hay và hấp dẫn.&lt;/p&gt;

&lt;p&gt;5h30 chúng tôi kết thúc buổi làm việc và ra về.&lt;/p&gt;</content><author><name></name></author><category term="Coding" /><summary type="html">Xin chào, tôi là Hiếu nickname là Kane hiện đang là sinh viên năm 3 trường đại học Trà Vinh, năm 3 này tôi được đi thực tập tại một cty outsource ở TP HCM là Be Solutions, ở đây tôi được rất nhiều người hướng dẫn tùy vào từng giai đoạn thực tập, người hướng dẫn tôi anh Yang Nguyễn đặt ra 3 yêu cầu phải làm trong khóa thực tập này bao gồm: Bootstrap 3 or 4 (bao gồm jQuery) Yii 2 Một số CMS lớn</summary></entry></feed>